/* automatically generated by rust-bindgen 0.55.1 */

#![allow(non_upper_case_globals)]#![allow(non_camel_case_types)]#![allow(non_snake_case)]#![allow(dead_code)]

pub type CBool = ::std::os::raw::c_ushort;
pub const CFalse: CBool = 0;
pub const CTrue: CBool = 1;
pub type CU64 = ::std::os::raw::c_ulonglong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CError {
    pub code: CU64,
    pub message: *mut ::std::os::raw::c_char,
}
pub const Success: CU64 = 0;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Wallet {
    pub id: *mut ::std::os::raw::c_char,
    pub nextId: *mut ::std::os::raw::c_char,
    pub ethChains: *mut EthChain,
    pub eeeChains: *mut EeeChain,
    pub btcChains: *mut BtcChain,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Address {
    pub id: *mut ::std::os::raw::c_char,
    pub walletId: *mut ::std::os::raw::c_char,
    pub chainType: *mut ::std::os::raw::c_char,
    pub address: *mut ::std::os::raw::c_char,
    pub publicKey: *mut ::std::os::raw::c_char,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct TokenShared {
    pub id: *mut ::std::os::raw::c_char,
    pub nextId: *mut ::std::os::raw::c_char,
    pub name: *mut ::std::os::raw::c_char,
    pub symbol: *mut ::std::os::raw::c_char,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ChainShared {
    pub id: *mut ::std::os::raw::c_char,
    pub walletId: *mut ::std::os::raw::c_char,
    pub chainType: *mut ::std::os::raw::c_char,
    #[doc = " 钱包地址"]
    pub walletAddress: *mut Address,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct BtcChainToken {
    pub tokenShared: *mut TokenShared,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct BtcChain {
    pub chainShared: *mut ChainShared,
    pub tokens: *mut BtcChainToken,
    pub tokensLength: CU64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EeeChainToken {
    pub tokenShared: *mut TokenShared,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EeeChain {
    pub chainShared: *mut ChainShared,
    pub address: *mut Address,
    pub tokens: *mut EeeChainToken,
    pub tokensLength: CU64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EthChainToken {
    pub tokenShared: *mut TokenShared,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EthChainTokenDefault {
    pub tokenShared: *mut TokenShared,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EthChainTokenAuth {
    pub tokenShared: *mut TokenShared,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EthChain {
    pub chain_shared: *mut ChainShared,
    pub tokens: *mut EthChainToken,
    pub tokens_length: CU64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct InitParameters {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct UnInitParameters {
    pub _address: u8,
}
