import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static S current;

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get about_us_title => "About us";
  String get add_wallet => "Add Wallet";
  String get address_empty => "Address is empty, please check";
  String get advice_pwd_format => "We advise that password more than 8 digits, with letters and number ";
  String get agree_service_prefix => "I have read and agreed";
  String get backup_mnemonic => "Backup mnemonics";
  String get backup_mnemonic_hint_info => "The mnemonic word is used to restore the wallet or reset the wallet password, copy it to paper accurately, and remember to store it safely in a safe place you know.";
  String get backup_wallet => "Backup wallet!";
  String get balance_is_less => "Insufficient balance！";
  String get cancel => "Cancel";
  String get chain_address_info => "Address information";
  String get change_another_group => "Change another group";
  String get choose_multi_chain => "Select to create chain type";
  String get click_to_copy_address => "Tap to copy address!";
  String get click_to_sign => "click to sign message";
  String get click_to_transfer => "Tap to transfer";
  String get compile_wallet_name => "Edit";
  String get confirm => "Confirm";
  String get create_test_wallet => "Create test wallet";
  String get create_wallet => "Create wallet";
  String get currency_manage => "Token management";
  String get dapp => "Dapp";
  String get dapp_sign_hint_content => "Note: Please type wallet password to sign your operation. \nWallet name：";
  String get data_loading => "Data loading...";
  String get delete_wallet => "Delete wallet";
  String get delete_wallet_hint => "Tip: Please save your mnemonic words. After the wallet is deleted, cashbox will no longer privately record any information about the wallet.";
  String get digit_info_null => "Token info is empty";
  String get digit_list_title => "Token list";
  String get digit_manage => "Token management";
  String get eee_chain_test => "EEE_TEST";
  String get eee_token_name => "EEE";
  String get ensure_pwd => "Confirm password";
  String get ensure_to_change => "Confirm changing";
  String get eth_chain_name => "ETH";
  String get eth_test_chain_name => "ETH_TEST";
  String get eth_token_name => "ETH";
  String get extend_msg => "Remarks";
  String get fail_to_load_data_hint => "Failed to load data, please check network or refresh";
  String get failure_change_wallet_name => "Change wallet name failed！";
  String get failure_create_test_wallet => "Test wallet failed, please check whether your data is valid";
  String get failure_reset_pwd_hint => "Failed to reset password, detailed information";
  String get failure_to_change_wallet => "Wallet switching failed, please reopen the wallet and try switching";
  String get failure_to_load_data_pls_retry => "Data loading error, please retry it";
  String get finish_load_tx_history => "Your transaction history has been loaded！";
  String get gas_limit => "Gas Limit";
  String get gas_price => "Gas Price";
  String get gas_used => "Gas consume";
  String get high_setting => "More settings";
  String get hint_extend_msg_option => "as follow is wait to sign message";
  String get import_wallet => "import wallet";
  String get info_sign => "Sign follow message";
  String get info_sign_hint => "please input password to sign this message";
  String get input_format_hint => "Better 8-24 digits, with letters and numbers";
  String get input_pwd_hint => "Please input wallet password";
  String get input_pwd_hint_detail => "Note: please input your password and sign the transaction info, send it on chain";
  String get judge_the_difference_between_two_wallet => "Note: The tokens on the test chain can be used in this test wallet. Please distinguish the difference from the official chain.";
  String get language_choose => "language selection";
  String get load_data_error => "Data loading error, please retry it";
  String get load_finish_wallet_digit => "Selected tokens have been loaded！";
  String get make_sure_service_protocol => "Please agree to the service agreement and privacy policy";
  String get mine => "Mine";
  String get mine_fee => "Gas fee";
  String get mne_pwd_not_allow_is_null => "Mnemonics and password cannot be empty";
  String get mnemonic => "Mnemonics";
  String get mnemonic_backup_ok => "Mnemonics have been well kept";
  String get mnemonic_info_hint => "The following are the mnemonic words of the wallet, please be sure to copy them carefully and export them to a safe place for storage.\nNote: Once lost, it cannot be recovered.";
  String get mnemonic_is_not_null => "Mnemonics cannot be empty";
  String get mnemonic_order_wrong => "The mnemonic you entered is inconsistent, please recheck the input or regenerate a new wallet";
  String get mnemonic_qr_info => "QR made from you information";
  String get new_pwd => "New password";
  String get new_pwd_format_hint => "Please input password, better more than 8 digits, with letters and numbers";
  String get no_new_version_hint => "The current version is the latest version";
  String get no_tx_history => "No history records now";
  String get nonce_value => "Nonce value";
  String get not_exist_tx_history => "No transaction records now...";
  String get not_follow_diamond_rule => "The result do not  comply with diamond Dapp rules";
  String get not_sure_chain_type => "please check your chain type message";
  String get not_sure_operation_type => "please check your operation type";
  String get old_pwd => "Old password";
  String get pls_ensure_confirm_pwd => "Please confirm consistency of your password";
  String get pls_ensure_eee_chain => "Please confirm to create EEE chain";
  String get pls_ensure_pwd_is_same => "Please input your password again and ensure consistency";
  String get pls_input => "Please input";
  String get pls_input_mnemonic => "Please input mnemonics";
  String get pls_input_old_pwd => "Please input old password";
  String get pls_input_receive_address => "Please input receiver address";
  String get pls_input_transaction_amount => "Please input transaction amount";
  String get pls_input_wallet_name => "Please input wallet name";
  String get pls_input_wallet_pwd => "Please input wallet password";
  String get pls_pwd_again => "Please input password again";
  String get pls_set_wallet_pwd => "Please set wallet password";
  String get privacy_protocol_tag => "《Privacy policy》";
  String get privacy_protocol_title => "Privacy policy";
  String get public => "Announcements";
  String get pwd => "Password";
  String get pwd_is_not_same => "Confirmation password is wrong, please type it again";
  String get pwd_not_null => "Password cannot be empty";
  String get pwd_verify => "verify password";
  String get qr_backup => "Backup QR Code";
  String get qr_info_is_null => "QR message is null";
  String get qr_info_is_out_of_date => "QR message is out of date";
  String get qr_info_is_wrong => "QR message is wrong";
  String get qr_scan_unknown_error => "Unknown error occured, please retry it";
  String get receive => "Receive";
  String get receive_address => "Receiver address";
  String get recover_wallet => "Recover wallet";
  String get recover_wallet_hint => "Tip: Please enter your password. Remember, the app will not save your mnemonic and other private information, please be sure to save it yourself.";
  String get reset_pwd => "Reset password";
  String get rewrite_new_pwd_format_hint => "Please input your new password";
  String get scan => "Scan";
  String get scan_qr_unknown_error => "Unknown error occurred, please retry it";
  String get service_protocol_tag => "《Service agreement 》";
  String get service_protocol_title => "Service agreement ";
  String get some_info_is_null => "Please fill all information";
  String get success_change_wallet_name => "Change wallet name succeeded！";
  String get success_create_test_wallet => "Test wallet created, please note the wallet type";
  String get success_in_delete_wallet => "Wallet deleted";
  String get success_reset_pwd_hint => "Password reset succeeded, please save your password, if lost cannot be recovered";
  String get success_to_copy_info => "Information successfully copied";
  String get test_wallet_and_mnemonic => "Test wallet Mnemonics:";
  String get test_wallet_title => "Test wallet";
  String get to_address_null => "Please check receiver address cannot be empty";
  String get transaction_amount => "Transaction amount";
  String get transaction_detail => "Transaction details";
  String get transaction_history => "Transaction records";
  String get transaction_history_record => "Transaction history";
  String get transaction_timestamp => "Transaction time";
  String get transfer => "Transfer";
  String get transfer_from_address => "Sender address:";
  String get transfer_to_address => "Receiver address:";
  String get tx_backup => "Transaction notes";
  String get tx_failure => "Transaction failed";
  String get tx_hash => "Transaction hash";
  String get tx_sign_failure => "Transaction signature failed";
  String get tx_sign_success => "Transaction signature succeeded";
  String get tx_success => "Transaction succeeded";
  String get tx_transferring => "Transferring";
  String get tx_value_is_0 => "Transaction amount cannot be empty or less than 0";
  String get unknown_error_in_create_wallet => "Unknown error in creating wallet occured, please retry it";
  String get unknown_error_in_reset_pwd => "There was an error in resetting the password, please try again";
  String get unknown_error_in_scan_qr_code => "Unknown error in scanning occured, please retry it";
  String get unknown_in_value => "Transaction amount error, please check ！";
  String get verify_backup_mnemonic => "Verify mnemonics";
  String get verify_failure_to_mnemonic => "Mnemonic verification failed, please recheck the information you entered, or the current wallet already exists";
  String get verify_mnemonic_info => "Confirm mnemonic verifications";
  String get verify_mnemonic_order => "Please enter your saved mnemonic words in order for verification. Again, the program will not retain your private information, please be sure to save the mnemonic words";
  String get verify_wallet => "Verify wallet";
  String get version_update => "Version updates";
  String get wait_to_sign_info => "wait to sign message";
  String get wallet_list => "Wallet list";
  String get wallet_load_error => "Failed to load Cashbox, please retry it";
  String get wallet_manager => "Wallet management";
  String get wallet_name => "Wallet name";
  String get wallet_name_not_null => "Wallet name cannot be empty";
  String get wallet_pwd => "Wallet password";
  String get wallet_transfer => "Wallet transfer";
  String get write_down_mnemonic => "Write down your mnemonics!";
  String get wrong_pwd_failure_in_delete_wallet => "Incorrect password, failed to delete wallet ";
  String get wrong_pwd_failure_in_recover_wallet_hint => "Password error, failed to recover wallet";
}

class $en extends S {
  const $en();
}

class $zh extends S {
  const $zh();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get import_wallet => "导入钱包";
  @override
  String get cancel => "取消";
  @override
  String get judge_the_difference_between_two_wallet => "注意：此测试钱包里面能使用的,都是测试链上的代币。      请区分与正式链的差别。";
  @override
  String get failure_reset_pwd_hint => "重置密码失败，详细信息";
  @override
  String get not_sure_operation_type => "请检查你选择的操作类型";
  @override
  String get unknown_error_in_reset_pwd => "重置密码出现位置错误，请重新打开尝试";
  @override
  String get pls_set_wallet_pwd => "请设置钱包密码";
  @override
  String get choose_multi_chain => "选择创建链";
  @override
  String get currency_manage => "货币管理";
  @override
  String get qr_scan_unknown_error => "扫描发生未知失败，请重新尝试";
  @override
  String get pls_input_transaction_amount => "请输入转账数额";
  @override
  String get qr_backup => "二维码备份";
  @override
  String get verify_backup_mnemonic => "验证助记词";
  @override
  String get wallet_transfer => "钱包转账";
  @override
  String get not_sure_chain_type => "请检查所选的链的类型";
  @override
  String get wallet_list => "钱包列表";
  @override
  String get dapp => "Dapp";
  @override
  String get success_create_test_wallet => "测试钱包 创建成功，切记注意区分钱包类型";
  @override
  String get delete_wallet_hint => "提示：请保存好您的助记词。钱包删除后，cashbox不会再私自记录该钱包的任何信息。";
  @override
  String get nonce_value => "nonce值";
  @override
  String get success_in_delete_wallet => "钱包删除成功";
  @override
  String get failure_change_wallet_name => "钱包名称修改 失败！";
  @override
  String get click_to_transfer => "点击转账";
  @override
  String get new_pwd => "新密码";
  @override
  String get privacy_protocol_title => "隐私条款";
  @override
  String get verify_failure_to_mnemonic => "助记词验证失败，请重新检查你输入的信息,或当前钱包已存在";
  @override
  String get create_wallet => "创建钱包";
  @override
  String get mine_fee => "矿工费";
  @override
  String get service_protocol_tag => "《服务协议》";
  @override
  String get pls_input_mnemonic => "请输入助记词";
  @override
  String get wallet_name => "钱包名称";
  @override
  String get pwd_not_null => "密码不能为空";
  @override
  String get advice_pwd_format => "建议大于8位，英文、数字混合";
  @override
  String get hint_extend_msg_option => "待签名信息如下";
  @override
  String get info_sign_hint => "请输入密码进行签名";
  @override
  String get input_format_hint => "建议8-24位，英文数字混合";
  @override
  String get click_to_copy_address => "点击复制地址!";
  @override
  String get tx_transferring => "交易发送中";
  @override
  String get test_wallet_title => "测试钱包";
  @override
  String get pls_ensure_confirm_pwd => "请确认两次输入密码一致";
  @override
  String get mnemonic_qr_info => "这是您助记词信息生成的二维码";
  @override
  String get pwd => "密码";
  @override
  String get load_finish_wallet_digit => "当前钱包选中的代币已加载完！";
  @override
  String get digit_list_title => "代币列表";
  @override
  String get wallet_load_error => "钱包应用加载出错了，请尝试重新打开!~";
  @override
  String get data_loading => "数据加载中...";
  @override
  String get mnemonic_info_hint => "以下是钱包的助记词，请您务必认真抄写下来并导出至安全的地方存放。\n注意：一旦丢失，无法找回。";
  @override
  String get transaction_amount => "交易数额";
  @override
  String get recover_wallet => "恢复钱包";
  @override
  String get scan => "扫一扫";
  @override
  String get eee_chain_test => "EEE_TEST";
  @override
  String get no_tx_history => "暂时没有历史交易记录";
  @override
  String get load_data_error => "数据加载出现错误，请重新尝试";
  @override
  String get tx_value_is_0 => "转账数额不能为空，或者小于0";
  @override
  String get failure_to_load_data_pls_retry => "数据加载出错了，请尝试重新加载!~";
  @override
  String get agree_service_prefix => "我已仔细阅读并同意";
  @override
  String get verify_wallet => "验证钱包";
  @override
  String get success_change_wallet_name => "钱包名称修改 成功！";
  @override
  String get failure_create_test_wallet => "测试钱包 创建失败，请检查你输入的数据是否正确";
  @override
  String get gas_limit => "Gas Limit";
  @override
  String get qr_info_is_out_of_date => "二维码信息已经过期";
  @override
  String get dapp_sign_hint_content => "提示：请输入钱包密码对操作进行签名。\n本次签名钱包的名称为：";
  @override
  String get qr_info_is_wrong => "二维码信息不符合格式";
  @override
  String get not_exist_tx_history => "暂无历史交易记录...";
  @override
  String get receive_address => "对方收款地址";
  @override
  String get mine => "我的";
  @override
  String get receive => "收款";
  @override
  String get unknown_in_value => "转账数额出现位置问题，请重新检查输入的数额！";
  @override
  String get click_to_sign => "点击签名";
  @override
  String get tx_backup => "交易备注";
  @override
  String get backup_mnemonic_hint_info => "助记词用于恢复钱包或者重置钱包密码，将它准确抄到纸上，切记安全保存到你知道的安全地方。";
  @override
  String get digit_manage => "代币管理";
  @override
  String get backup_wallet => "备份钱包!";
  @override
  String get pls_input_wallet_pwd => "请输入钱包密码";
  @override
  String get tx_hash => "交易hash";
  @override
  String get pls_ensure_pwd_is_same => "再次输入您的密码，确保一致";
  @override
  String get digit_info_null => "代币信息为空";
  @override
  String get confirm => "确定";
  @override
  String get wallet_name_not_null => "钱包名不能为空";
  @override
  String get verify_mnemonic_order => "请按顺序输入你保存好的助记词做验证。再次提醒，程序不会保留您的隐私信息,请您务必保存好助记词";
  @override
  String get failure_to_change_wallet => "钱包切换失败，请重新打开钱包，尝试切换";
  @override
  String get some_info_is_null => "有信息为空，请补全信息";
  @override
  String get wrong_pwd_failure_in_delete_wallet => "密码错误，钱包删除失败";
  @override
  String get eth_token_name => "ETH";
  @override
  String get wrong_pwd_failure_in_recover_wallet_hint => "密码错误，钱包恢复失败";
  @override
  String get tx_sign_success => "交易签名 成功";
  @override
  String get input_pwd_hint_detail => "提示：请输入您的密码，对交易信息进行签名。并将发送上链";
  @override
  String get chain_address_info => "链地址信息";
  @override
  String get delete_wallet => "删除钱包";
  @override
  String get extend_msg => "备注信息";
  @override
  String get mnemonic_order_wrong => "验证您输入助记词不一致，请重新检查输入内容，或重新生成新钱包";
  @override
  String get about_us_title => "关于我们";
  @override
  String get mnemonic => "助记词";
  @override
  String get fail_to_load_data_hint => "数据加载失败,请检查网络状况，可尝试下拉刷新";
  @override
  String get test_wallet_and_mnemonic => "测试钱包 助记词:";
  @override
  String get success_to_copy_info => "信息已经成功拷贝!~~~";
  @override
  String get pwd_is_not_same => "确认密码不一致，请重新输入";
  @override
  String get transaction_detail => "交易详情";
  @override
  String get gas_price => "Gas Price";
  @override
  String get pls_input_old_pwd => "请输入旧密码";
  @override
  String get wait_to_sign_info => "待签名信息";
  @override
  String get compile_wallet_name => "编辑";
  @override
  String get verify_mnemonic_info => "助记词确认验证";
  @override
  String get eth_chain_name => "ETH";
  @override
  String get transfer => "转账";
  @override
  String get rewrite_new_pwd_format_hint => "再次输入新密码";
  @override
  String get language_choose => "语言选择";
  @override
  String get ensure_pwd => "确认密码";
  @override
  String get qr_info_is_null => "二维码信息为空";
  @override
  String get tx_sign_failure => "交易签名 失败";
  @override
  String get not_follow_diamond_rule => "扫描内容结果不符合diamond Dapp规则";
  @override
  String get pls_input_wallet_name => "请输入钱包名";
  @override
  String get to_address_null => "请检查对方地址不能为空";
  @override
  String get eth_test_chain_name => "ETH_TEST";
  @override
  String get create_test_wallet => "创建测试钱包";
  @override
  String get backup_mnemonic => "备份助记词";
  @override
  String get address_empty => "地址信息为空，请再检查";
  @override
  String get info_sign => "信息签名";
  @override
  String get unknown_error_in_create_wallet => "钱包创建过程，出现未知错误，请重新尝试创建";
  @override
  String get change_another_group => "换一组";
  @override
  String get recover_wallet_hint => "提示：请输入您的密码。     切记，应用不会保存你的助记词等隐私信息，请您自己务必保存好。";
  @override
  String get privacy_protocol_tag => "《隐私条款》";
  @override
  String get pls_input_receive_address => "请输入收款地址";
  @override
  String get scan_qr_unknown_error => "扫描发生未知失败，请重新尝试";
  @override
  String get pwd_verify => "密码验证";
  @override
  String get finish_load_tx_history => "您的 交易记录 已经加载完了！";
  @override
  String get version_update => "版本更新";
  @override
  String get public => "公告";
  @override
  String get pls_ensure_eee_chain => "请确认勾选创建EEE链";
  @override
  String get new_pwd_format_hint => "请输入新密码，建议大于8位，英文、数字混合";
  @override
  String get input_pwd_hint => "请输入钱包密码";
  @override
  String get mnemonic_is_not_null => "助记词不能为空";
  @override
  String get add_wallet => "添加钱包";
  @override
  String get balance_is_less => "当前账户余额不足！";
  @override
  String get transaction_history_record => "交易历史记录";
  @override
  String get mnemonic_backup_ok => "助记词已经记好";
  @override
  String get no_new_version_hint => "当前已是最新版本，暂无更新";
  @override
  String get mne_pwd_not_allow_is_null => "助记词和密码不能为空";
  @override
  String get transaction_history => "交易记录";
  @override
  String get pls_pwd_again => "再次输入密码";
  @override
  String get gas_used => "gas消耗";
  @override
  String get wallet_manager => "钱包管理";
  @override
  String get reset_pwd => "重置密码";
  @override
  String get old_pwd => "旧密码";
  @override
  String get tx_success => "交易成功";
  @override
  String get tx_failure => "交易失败";
  @override
  String get ensure_to_change => "确定更改";
  @override
  String get service_protocol_title => "服务协议";
  @override
  String get transaction_timestamp => "交易时间";
  @override
  String get wallet_pwd => "钱包密码";
  @override
  String get transfer_to_address => "转入地址:";
  @override
  String get make_sure_service_protocol => "请确认勾选 同意服务协议与隐私条款";
  @override
  String get transfer_from_address => "转出地址:";
  @override
  String get pls_input => "请输入";
  @override
  String get success_reset_pwd_hint => "重置密码成功，请您保存好你的密码，丢失无法找回";
  @override
  String get high_setting => "高级设置";
  @override
  String get eee_token_name => "EEE";
  @override
  String get unknown_error_in_scan_qr_code => "扫描发生未知失败，请重新尝试";
  @override
  String get write_down_mnemonic => "抄下你的钱包助记词!";
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("en", ""),
      Locale("zh", ""),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "en":
          S.current = const $en();
          return SynchronousFuture<S>(S.current);
        case "zh":
          S.current = const $zh();
          return SynchronousFuture<S>(S.current);
        default:
          // NO-OP.
      }
    }
    S.current = const S();
    return SynchronousFuture<S>(S.current);
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
