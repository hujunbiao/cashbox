{"version":3,"sources":["webpack:///./src/assets/i18n/lang.ts"],"names":["glang","Langs","use","messages","en","zh","ja","ko","i18n","langInit","slang","localStorage","getItem","URLSearchParams","location","search","get","lang","startsWith","then","la","default","setItem","locale","setLang","getLang"],"mappings":"qVAUIA,EAEQC,E,oCAJZ,OAAIC,IAAI,QAIR,SAAYD,GACV,aACA,aACA,aACA,aAJF,CAAYA,MAAK,KAOjB,IAAME,EAAW,CACfC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAGOC,EAAO,IAAI,OAAQ,CAC9BL,aAGI,SAAUM,IACd,IAAIC,EAAQC,aAAaC,QAAQ,QAC5BF,IACHA,EAAQ,IAAIG,gBAAgBC,SAASC,QAAQC,IAAI,SAEnD,IAAIC,EAAOhB,EAAMG,GAqCjB,OApCIM,EACEA,EAAMQ,WAAW,OACnBD,EAAOhB,EAAMI,GACb,UAAO,KAAOY,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAI,QAASkB,EAAGC,SACvBlB,EAASE,GAAKe,EAAGC,YAGVX,EAAMQ,WAAW,OAC1BD,EAAOhB,EAAMK,GACb,UAAO,KAAOW,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAIe,EAAMG,EAAGC,SACpBlB,EAASG,GAAKc,EAAGC,YAEVX,EAAMQ,WAAW,OAC1BD,EAAOhB,EAAMM,GACb,UAAO,KAAOU,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAIe,EAAMG,EAAGC,SACpBlB,EAASI,GAAKa,EAAGC,aAGnBJ,EAAOhB,EAAMG,GACb,UAAO,KAAOa,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAIe,EAAMG,EAAGC,SACpBlB,EAASC,GAAKgB,EAAGC,YAIrB,UAAO,KAAOJ,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAIe,EAAMG,EAAGC,SACpBlB,EAASC,GAAKgB,EAAGC,WAGrBV,aAAaW,QAAQ,OAAQL,GAC7BjB,EAAQiB,EACRT,EAAKe,OAASN,EACPA,EAGH,SAAUO,EAAQP,GAItB,OAHKA,IACHA,EAAOhB,EAAMG,IAEPa,GACN,KAAKhB,EAAMG,GACT,UAAO,KAAOa,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAIe,EAAMG,EAAGC,SACpBlB,EAASC,GAAKgB,EAAGC,WAEnB,MAEF,KAAKpB,EAAMI,GACT,UAAO,KAAOY,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAI,QAASkB,EAAGC,SACvBlB,EAASE,GAAKe,EAAGC,WAGrB,KAAKpB,EAAMK,GACT,UAAO,KAAOW,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAIe,EAAMG,EAAGC,SACpBlB,EAASG,GAAKc,EAAGC,WAEnB,MAEF,KAAKpB,EAAMM,GACT,UAAO,KAAOU,GAAME,MAAK,SAACC,GACxB,OAAOlB,IAAIe,EAAMG,EAAGC,SACpBlB,EAASI,GAAKa,EAAGC,WAEnB,MAGJrB,EAAQiB,EACRT,EAAKe,OAASN,EACdN,aAAaW,QAAQ,OAAQL,GAGzB,SAAUQ,IACd,OAAOzB","file":"js/chunk-2d0bd5d6.3dc46c8b.js","sourcesContent":["import { Locale } from 'vant';\r\nimport Vue from 'vue';\r\nimport VueI18n from 'vue-i18n';\r\n// import en from './en';\r\n// import zh from './zh';\r\n// import ja from './ja';\r\n// import ko from './ko';\r\n\r\nVue.use(VueI18n);\r\n\r\nlet glang: Langs;\r\n// let i18n: VueI18n;\r\nexport enum Langs {\r\n  en = 'en',\r\n  zh = 'zh',\r\n  ja = 'ja',\r\n  ko = 'ko',\r\n}\r\n\r\nconst messages = {\r\n  en: {},\r\n  zh: {},\r\n  ja: {},\r\n  ko: {},\r\n};\r\n\r\nexport const i18n = new VueI18n({\r\n  messages,\r\n});\r\n\r\nexport function langInit(): Langs {\r\n  let slang = localStorage.getItem('lang');\r\n  if (!slang) {\r\n    slang = new URLSearchParams(location.search).get('lang');\r\n  }\r\n  let lang = Langs.en;\r\n  if (slang) {\r\n    if (slang.startsWith('zh')) {\r\n      lang = Langs.zh;\r\n      import('./' + lang).then((la) => {\r\n        Locale.use('zh-CN', la.default);\r\n        messages.zh = la.default;\r\n      });\r\n\r\n    } else if (slang.startsWith('ja')) {\r\n      lang = Langs.ja;\r\n      import('./' + lang).then((la) => {\r\n        Locale.use(lang, la.default);\r\n        messages.ja = la.default;\r\n      });\r\n    } else if (slang.startsWith('ko')) {\r\n      lang = Langs.ko;\r\n      import('./' + lang).then((la) => {\r\n        Locale.use(lang, la.default);\r\n        messages.ko = la.default;\r\n      } );\r\n    } else {\r\n      lang = Langs.en;\r\n      import('./' + lang).then((la) => {\r\n        Locale.use(lang, la.default);\r\n        messages.en = la.default;\r\n      } );\r\n    }\r\n  } else {\r\n    import('./' + lang).then((la) => {\r\n      Locale.use(lang, la.default);\r\n      messages.en = la.default;\r\n    } );\r\n  }\r\n  localStorage.setItem('lang', lang);\r\n  glang = lang;\r\n  i18n.locale = lang;\r\n  return lang;\r\n}\r\n\r\nexport function setLang(lang: Langs): void {\r\n  if (!lang) {\r\n    lang = Langs.en;\r\n  }\r\n  switch (lang) {\r\n    case Langs.en: {\r\n      import('./' + lang).then((la) => {\r\n        Locale.use(lang, la.default);\r\n        messages.en = la.default;\r\n      } );\r\n      break;\r\n    }\r\n    case Langs.zh: {\r\n      import('./' + lang).then((la) => {\r\n        Locale.use('zh-CN', la.default);\r\n        messages.zh = la.default;\r\n      } );\r\n    }\r\n    case Langs.ja: {\r\n      import('./' + lang).then((la) => {\r\n        Locale.use(lang, la.default);\r\n        messages.ja = la.default;\r\n      } );\r\n      break;\r\n    }\r\n    case Langs.ko: {\r\n      import('./' + lang).then((la) => {\r\n        Locale.use(lang, la.default);\r\n        messages.ko = la.default;\r\n      } );\r\n      break;\r\n    }\r\n  }\r\n  glang = lang;\r\n  i18n.locale = lang;\r\n  localStorage.setItem('lang', lang);\r\n}\r\n\r\nexport function getLang(): Langs {\r\n  return glang;\r\n}\r\n"],"sourceRoot":""}